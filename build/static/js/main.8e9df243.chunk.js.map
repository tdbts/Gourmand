{"version":3,"sources":["logo.svg","components/Suggestions.js","components/SearchForm.js","scrapers/yelp/YelpMedia.js","domain/Media.js","components/Gallery.js","components/MediaModal.js","lookup/Lookup.js","App.js","reportWebVitals.js","index.js"],"names":["Suggestions","requestLocation","ListGroup","className","onMouseDown","e","preventDefault","ListGroupItem","tag","onClick","action","src","SearchForm","onSearchRequest","searching","useState","description","setDescription","location","setLocation","suggestionsOpen","setSuggestionsOpen","hideSuggestions","onSubmit","console","log","target","descriptionInput","locationInput","value","Container","Row","Col","xs","type","onChange","event","placeholder","prevState","onBlur","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","toPrecision","error","Button","color","Spinner","size","YelpMedia","id","caption","source","stem","this","slice","_","pick","bson","Gallery","restaurants","onMediaSelection","shuffledMedia","setShuffledMedia","useEffect","allMedia","flatMap","restaurant","media","shuffle","map","populateFromBSON","getShuffledMedia","m","i","getThumbnailURLs","formatCaption","onAddressClick","address","url","join","replace","formatMapLink","window","open","focus","MediaModal","selected","onClose","name","neighborhoods","categories","rating","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","lookup","restaurantsByID","mediaByID","restaurantIDsByMediaID","combineMaps","existing","update","reduce","updateRestaurantsByID","updateMediaByID","mapMediaIDtoRestaurantID","updateRestaurantIDsByMediaID","updateLookup","updateSearchURL","setURL","encodeURIComponent","createSearchURL","getSelectedMediaInfo","selectedID","getMediaByID","getRestaurantByID","getRestaurantIDByMediaID","App","setRestaurants","selectedMediaID","setSelectedMediaID","setSearching","fetch","then","response","json","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9df243.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\n/*\r\n The parent search form hides suggestions on blur events from the location input, removing this component from the DOM before the click handler of this component can fire.  To mitigate, prevent default on mousedown.\r\n*/\r\nfunction Suggestions({requestLocation}) {\r\n\treturn  (\r\n\t\t<ListGroup className=\"suggestions-list-group\" onMouseDown={e => e.preventDefault()}>\r\n\t\t\t<ListGroupItem tag=\"button\" onClick={requestLocation} action>\r\n\t\t\t\t<div className=\"current-location-container\">\r\n\t\t\t\t\t<img className=\"current-location-icon\" src=\"cursor-fill.svg\" />\r\n\t\t\t\t\t<span>Current Location</span>\r\n\t\t\t\t</div>\r\n\t\t\t</ListGroupItem>\r\n\t\t</ListGroup>\r\n\t);\r\n}\r\n\r\nexport default Suggestions;","import { useState } from 'react';\r\nimport { Container, Row, Col, Button, Spinner } from 'reactstrap';\r\nimport Suggestions from './Suggestions';\r\n\r\nfunction SearchForm({onSearchRequest, searching}) {\r\n\tconst [description, setDescription] = useState('');\r\n\tconst [location, setLocation] = useState('');\r\n\tconst [suggestionsOpen, setSuggestionsOpen] = useState(false);\r\n\r\n\tconst onDescriptionChange = (event) => {\r\n\t\tsetDescription(event.target.value);\r\n\t};\r\n\r\n\tconst onLocationChange = (event) => {\r\n\t\tsetLocation(event.target.value);\r\n\t};\r\n  \t\r\n  \tconst toggleSuggestions = () => setSuggestionsOpen(prevState => !prevState);\r\n  \tconst hideSuggestions = () => setSuggestionsOpen(false);\r\n  \t\r\n  \tconst requestLocation = () => {\r\n  \t\tconsole.log(\"Requesting location.\");\r\n\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\te => {\r\n\t\t\t\tconst { latitude, longitude } = e.coords;\r\n\t\t\t\tsetLocation(`${latitude.toPrecision(7)}, ${longitude.toPrecision(7)}`);\r\n\t\t\t\thideSuggestions();\r\n\t\t\t}, \r\n\t\t\te => console.error(e));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"search-form\" onSubmit={(e) => onSubmit(e, onSearchRequest)}>\r\n\t\t\t<Container className=\"input-container px-0\">\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs=\"3\">\r\n\t\t\t\t\t\t<p>Description:</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<input className=\"search-input\" type=\"text\" value={description} onChange={onDescriptionChange} placeholder=\"e.g. Pizza\" />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\t\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col xs=\"3\">\r\n\t\t\t\t\t\t<p>Location:</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<input className=\"search-input\" type=\"text\" value={location} onChange={onLocationChange} onClick={toggleSuggestions}\r\n\t\t\t\t\t\t\tonBlur={hideSuggestions} placeholder=\"e.g. Brooklyn, NY 11237\" />\r\n\t\t\t\t\t\t{suggestionsOpen && <Suggestions requestLocation={requestLocation} />}\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"search-button-container\">\r\n\t\t\t\t\t\t<Button className=\"search-button\" color=\"primary\">\r\n\t\t\t\t\t\t\t{searching ? <Spinner color=\"light\" size=\"sm\" /> : \"Search\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\t\r\n\t\t\t</Container>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nfunction onSubmit(e, onSearchRequest) {\r\n\te.preventDefault();\r\n\tconsole.log(\"onSubmit()\");\r\n\tconsole.log(\"e:\", e);\r\n\tconst [descriptionInput, locationInput] = e.target;\r\n\tonSearchRequest(descriptionInput.value, locationInput.value);\r\n}\r\n\r\nexport default SearchForm;\r\n","import Media from '../../domain/Media.js';\r\n\r\nclass YelpMedia extends Media {\r\n\r\n\tconstructor(id, type, caption, source) {\r\n\t\tsuper(id, type, caption, source);\r\n\t}\r\n\r\n\tgetThumbnailURLs() {\r\n\t\tconst stem = this.source.slice(0, -5);\r\n\r\n\t\treturn [\r\n\t\t\tstem + '258s.jpg',\r\n\t\t\tstem + '300s.jpg',\r\n\t\t\tstem + '348s.jpg'\r\n\t\t];\r\n\t}\r\n\r\n}\r\n\r\nexport default YelpMedia","import _ from'underscore';\r\n\r\nexport default class Media {\r\n\r\n\tconstructor(id, type, caption, source) {\r\n\t\tthis.id = id;\r\n\t\tthis.type = type;\r\n\t\tthis.caption = caption;\r\n\t\tthis.source = source;\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn _.pick(this, 'id', 'type', 'caption', 'source');\r\n\t}\r\n\r\n\tpopulateFromBSON(bson) {\r\n\t\tconst { id, type, caption, source } = bson;\r\n\r\n\t\tthis.id = id;\r\n\t\tthis.type = type;\r\n\t\tthis.caption = caption;\r\n\t\tthis.source = source;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport _ from 'underscore';\r\nimport YelpMedia from '../scrapers/yelp/YelpMedia';\r\n\r\nconst Gallery = ({restaurants, onMediaSelection}) => {\r\n\t// console.log(\"media:\", media);\r\n\tconst [shuffledMedia, setShuffledMedia] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetShuffledMedia(getShuffledMedia(restaurants));\r\n\t}, [restaurants]);\r\n\r\n\treturn (\r\n\t\t<div className=\"gallery-container\">\r\n\t\t\t{shuffledMedia.map((m, i) => <img className=\"food-media thumbnail\" src={m.getThumbnailURLs()[0]} key={i} onClick={() => onMediaSelection(m.id)} />)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nfunction getShuffledMedia(restaurants) {\r\n\tconsole.log(\"restaurants:\", restaurants);\r\n\tconst allMedia = restaurants.flatMap(restaurant => restaurant.media);\r\n\tconsole.log(\"allMedia:\", allMedia);\r\n\tconst shuffledMedia = _.shuffle(allMedia);\r\n\t// console.log(\"shuffledMedia:\", shuffledMedia);\r\n\treturn shuffledMedia.map(media => (new YelpMedia().populateFromBSON(media)));\r\n}\r\n\r\nexport default Gallery;","import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nfunction formatCaption(caption) {\r\n\treturn caption ? `\"${caption}\"` : \"[ No Caption ]\";\r\n}\r\n\r\nfunction onAddressClick(e, address) {\r\n\te.preventDefault();\r\n\topenInNewTab(formatMapLink(address));\r\n}\r\n\r\nfunction openInNewTab(url) {\r\n\tconst win = window.open(url, '_blank');\r\n\twin.focus();\r\n}\r\n\r\nfunction formatMapLink(address) {\r\n\treturn \"https://www.google.com/maps/place/\" + address.join(\" \").replace(\" \", \"+\");\r\n}\r\n\r\nfunction MediaModal({selected, onClose}) {\r\n\tconsole.log(\"selected:\", selected);\r\n\tconst {media, restaurant} = selected;\r\n\tconst {source, caption} = media;\r\n\tconst {name, address, neighborhoods, categories, rating} = restaurant;\r\n\r\n\treturn (\r\n\t\t<Modal isOpen={!!selected} toggle={onClose} className=\"media-modal-container\">\r\n\t\t\t<ModalHeader toggle={onClose}>\r\n\t\t\t\t<div className=\"caption\">{formatCaption(caption)}</div>\r\n\t\t\t</ModalHeader>\r\n\t\t\t<ModalBody>\r\n\t\t\t\t<div className=\"modal-info-container\">\r\n\t\t\t\t\t<img className=\"food-media modal-image\" src={source} />\r\n\t\t\t\t\t<div className=\"restaurant-details-container\">\r\n\t\t\t\t\t\t{name && <div className=\"restaurant-name\">{name}</div>}\r\n\t\t\t\t\t\t{address && <a onClick={e => onAddressClick(e, address)} className=\"restaurant-address\">{address.join(\" \")}</a>}\r\n\t\t\t\t\t\t{neighborhoods && <div className=\"restaurant-neighborhoods\">{neighborhoods.join(\", \")}</div>}\r\n\t\t\t\t\t\t{categories && <div className=\"restaurant-categories\">{categories.join(\", \")}</div>}\r\n\t\t\t\t\t\t{rating && <div className=\"restaurant-rating\">{rating}</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t        </ModalBody>\r\n\t        <ModalFooter>\r\n\t\t\t\t<Button color=\"secondary\" onClick={onClose}>Close</Button>\r\n\t\t\t</ModalFooter>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default MediaModal;\r\n","/*\r\n * Lookup\r\n */\r\n const lookup = { \r\n \trestaurantsByID: {}, \r\n \tmediaByID: {}, \r\n \trestaurantIDsByMediaID: {} \r\n };\r\n\r\nexport default class Lookup {\r\n\tupdate(restaurants) {\r\n\t\tupdateLookup(lookup, restaurants);\r\n\t}\r\n\r\n\tgetMediaByID(id) {\r\n\t\treturn lookup.mediaByID[id];\r\n\t}\r\n\r\n\tgetRestaurantByID(id) {\r\n\t\treturn lookup.restaurantsByID[id];\r\n\t}\r\n\r\n\tgetRestaurantIDByMediaID(id) {\r\n\t\treturn lookup.restaurantIDsByMediaID[id];\r\n\t}\r\n};\r\n\r\nfunction updateLookup(lookup, restaurants) {\r\n\tlookup.restaurantsByID = combineMaps(lookup.restaurantsByID, updateRestaurantsByID(restaurants));\r\n\tlookup.mediaByID = combineMaps(lookup.mediaByID, updateMediaByID(restaurants));\r\n\tlookup.restaurantIDsByMediaID = combineMaps(lookup.restaurantIDsByMediaID, updateRestaurantIDsByMediaID(restaurants));\r\n}\r\n\r\nfunction updateRestaurantsByID(restaurants) {\r\n\treturn restaurants.reduce((map, restaurant) => {\r\n\t\tmap[restaurant.id] = restaurant;\r\n\t\treturn map;\r\n\t}, {});\r\n}\r\n\r\nfunction updateMediaByID(restaurants) {\r\n\treturn restaurants\r\n\t\t.flatMap(restaurant => restaurant.media)\r\n\t\t.reduce((map, media) => {\r\n\t\t\tmap[media.id] = media;\r\n\t\t\treturn map;\r\n\t\t}, {});\r\n}\r\n\r\nfunction updateRestaurantIDsByMediaID(restaurants) {\r\n\treturn restaurants.reduce((map, restaurant) => (combineMaps(map, mapMediaIDtoRestaurantID(restaurant))), {});\r\n}\r\n\r\nfunction mapMediaIDtoRestaurantID(restaurant) {\r\n\treturn restaurant.media\r\n\t\t.reduce((map, media) => {\r\n\t\t\tmap[media.id] = restaurant.id;\r\n\t\t\treturn map;\r\n\t\t}, {});\r\n}\r\n\r\nfunction combineMaps(existing, update) {\r\n\treturn { ...existing, ...update };\r\n}","import { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SearchForm from './components/SearchForm';\nimport Gallery from './components/Gallery';\nimport MediaModal from './components/MediaModal';\nimport Lookup from './lookup/Lookup';\n\nconst lookup = new Lookup();\n\nfunction updateSearchURL(description, location, setURL) {\n\tconsole.log(\"updateSearchURL()\");\n\tconsole.log(\"description:\", description);\n\tconsole.log(\"location:\", location);\n\tif (!location)\n\t\treturn;\n\n\tconst url = createSearchURL(description, location);\n\tconsole.log(\"url:\", url);\n\treturn setURL(url);\n}\n\nfunction createSearchURL(description, location) {\n\treturn `/search?description=${encodeURIComponent(description)}&location=${encodeURIComponent(location)}`;\n}\n\nfunction getSelectedMediaInfo(selectedID, lookup) {\n\tconst media = lookup.getMediaByID(selectedID);\n\tconst restaurant = lookup.getRestaurantByID(lookup.getRestaurantIDByMediaID(selectedID));\n\treturn { media, restaurant };\n}\n\nfunction App() {\n\tconst [url, setURL] = useState('');\n\tconst [restaurants, setRestaurants] = useState([]);\n\tconst [selectedMediaID, setSelectedMediaID] = useState('');\n\tconst [searching, setSearching] = useState(false);\n\n\tconsole.log(\"selectedMediaID:\", selectedMediaID);\n\tuseEffect(() => {\n\t\tif (url) {\n\t\t\tconsole.log(\"Making request:\", url);\n\t\t\tsetSearching(true);\n\n\t\t\tfetch(url)\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\tlookup.update(json);\n\t\t\t\t\tconsole.log(\"lookup:\", lookup);\n\t\t\t\t\tsetRestaurants(json);\n\t\t\t\t\tsetSearching(false);\n\t\t\t\t});\n\t\t}\n\t}, [url])\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"header-container\">\n\t\t\t\t<h1 className=\"title-header\">Gourmand</h1>\n\t\t\t\t<SearchForm onSearchRequest={(description, location) => updateSearchURL(description, location, setURL)} searching={searching} />\n\t\t\t</div>\n\t\t\t{selectedMediaID && <MediaModal selected={getSelectedMediaInfo(selectedMediaID, lookup)} onClose={() => setSelectedMediaID('')} />}\n\t\t\t<Gallery restaurants={restaurants} onMediaSelection={setSelectedMediaID} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}